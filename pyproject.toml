[build-system]
# pdm
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"
# hatch
#requires = ["hatchling"]
#build-backend = "hatchling.build"

[project]
name = "mammoth"
description = "Mostly columnar based physics analyses"
license = {text = "BSD-3-Clause"}
requires-python = ">=3.8"
authors = [
  { name = "Raymond Ehlers", email = "raymond.ehlers@cern.ch" },
]
# For hatch, need to remove the dependencies references here
dynamic = ["dependencies", "optional-dependencies", "version"]
dependencies = [
    "awkward >=2.0.8",
    "uproot >=4.2",
    "numpy >=1.21",
    "pyarrow >=4",
    "pandas >=1.3",
    "attrs >=21.2.0",
    "particle >=0.15.1",
    "numba >=0.56.0",
    "hist[plot] >=2.5.0",
    "seaborn >=0.11.2",
    "vector >=0.8.5",
    "parsl[monitoring] @ git+https://github.com/Parsl/parsl.git@6d1f9160d487b3265f6e9d65ebb357837a437c30",
    # NOTE: Need the most recent version to avoid a python version cap. Once 13.0 is released, move to that.
    "rich @ git+https://github.com/Textualize/rich.git@4001aa91790c5faf46d9fbca35d335d76de52376",
    # My packages last:
    # - mammoth_cpp
    # For general:
    #"mammoth_cpp >=0.1",
    # For pdm:
    "mammoth_cpp @ file:///${PROJECT_ROOT}/mammoth-cpp",
    # For hatch:
    #"mammoth_cpp @ file://{root:uri}/mammoth-cpp",
    # - pachyderm
    # For pdm: it's in the dev dependencies since we want it to be editable, but we can
    # copy it twice, see here: https://github.com/pdm-project/pdm/discussions/1479
    "pachyderm >= 3.0",
    # For hatch: we can install it locally (but not editable) with:
    #"pachyderm @ file://{root:uri}/external/pachyderm",
    "dask[distributed]>=2022.12.0",
    "dask-jobqueue>=0.8.1",
]

# NOTE: If moving to hatch, move this to "[project.optional-dependencies]"
[tool.pdm.dev-dependencies]
dev = [
    "ruff>=0.0.209",
    "black >=22.1.0",
    "mypy >=0.931",
    "ipython >=8.0",
    "ipykernel >=6.15.1",
    "pytest >=6.2.4",
    "pytest-sugar >=0.9.5",
    "pytest-xdist>=3.1.0",
    # Included so we can grab the headers for vscode (also so that we can build in the env if we want)
    "pybind11 >=2.10",
    # pachyderm
    # pdm requires editable dependencies to be in the dev dependencies
    "-e file:///${PROJECT_ROOT}/external/pachyderm#egg=pachyderm",
]

[tool.hatch]
version.path = "src/mammoth/__init__.py"
build.include = [
    "src/mammoth/py.typed",
]

[tool.pdm]
version = { source = "file", path = "src/mammoth/__init__.py" }
include = [
    "src/mammoth/py.typed",
]

[tool.mypy]
files = "src"
python_version = "3.9"
warn_unused_configs = true
strict = true
ignore_missing_imports = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = [
    "awkward",
    "boost_histogram",
    "coloredlogs",
    "cycler",
    "dask.*",
    "enlighten",
    "jet_substructure.*",
    "IPython",
    "matplotlib.*",
    "mplhep",
    "networkx.*",
    "numba",
    "numpy",
    "pandas",
    "pyarrow.*",
    "parsl.*",
    "ROOT",
    "seaborn",
    "scipy.interpolate",
    "scipy",
    "uproot",
]
ignore_missing_imports = true

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.ruff]
exclude = [
    '.git',
    '.env',
    '.env3',
    '.py3.7',
    '.venv',
    'env',
    '__pycache__',
    'bak',
    'build',
    'dist',
]
line-length = 120
select = [
    "E", "F", "W", # flake8
    "C901",        # mccabe
    "B", "B904",   # flake8-bugbear
    "I",           # isort
    "ARG",         # flake8-unused-arguments
    "C4",          # flake8-comprehensions
    "EM",          # flake8-errmsg
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "RET",         # flake8-return
    "RUF",         # Ruff-specific
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
ignore = [
    "E501",
    "E722",
    "RUF001",  # Unicode chars
    "PLR",
    "ISC003",  # Force string to be implicitly concatenated. However, I find this structure to be useful for better
               # readability due to consistent spacing with plotting labels.
]
unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
]
target-version = 'py38'

[tool.ruff.mccabe]
max-complexity = 12

[tool.ruff.isort]
known-first-party = ["mammoth", "mammoth_cpp"]

[tool.pylint]
master.py-version = "3.9"
master.ignore-paths= ["src/pachyderm/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "wrong-import-position",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.check-manifest]
ignore = [
  ".github/**",
  "docs/**",
  ".pre-commit-config.yaml",
  ".readthedocs.yml",
  "src/*/_version.py",
  "noxfile.py",
]
